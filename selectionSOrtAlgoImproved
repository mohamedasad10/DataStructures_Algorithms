/* Selection Sort Algorithm Improved!
 * ATTENTION : CODE TAKEN FROM: https://www.w3schools.com/dsa/dsa_algo_selectionsort.php
 * 
 * For this code:
 * Instead of all the shifting, swap the lowest value (5) with the first value (64).
 * We can swap values because the lowest value ends up in the correct position(at the beginning), 
 * and it does not matter where we put the other value we are swapping with, because it is not sorted yet. 
 */

public class main{
    public static void main(String[] args) {
        // Initialize an array to be sorted
        int[] my_array = {64, 34, 25, 12, 22, 11, 90, 5};
        int n = my_array.length;                // Get the length of the array

        // Iterate over the entire array, considering one element at a time
        for (int i = 0; i < n; i++) {
            int min_index = i;                  // Assume the current position contains the smallest element

            // Find the smallest element in the unsorted portion of the array
            for (int j = i + 1; j < n; j++) {
                if (my_array[j] < my_array[min_index]) {
                    min_index = j;              // Update min_index if a smaller element is found
                }
            }

            // Swap the smallest found element with the first element of the unsorted portion
            int temp = my_array[i];             // Store the value at position 'i' in a temporary variable
            my_array[i] = my_array[min_index];  // Place the smallest element at position 'i'
            my_array[min_index] = temp;         // Replace the smallest element's original position with the stored value
        }

        // Print the sorted array
        System.out.print("Sorted array: ");
        for (int i = 0; i < n; i++) {
            System.out.print(my_array[i] + " ");
        }
        System.out.println(); 
    }
}
